{"version":3,"sources":["webpack:///./node_modules/angular-datatables/index.js","webpack:///./node_modules/angular-datatables/src/angular-datatables.directive.js","webpack:///./node_modules/angular-datatables/src/angular-datatables.module.js","webpack:///./src/app/admin/settings/email/email.component.html","webpack:///./src/app/admin/settings/email/email.component.scss","webpack:///./src/app/admin/settings/email/email.component.ts","webpack:///./src/app/admin/settings/email/email.module.ts","webpack:///./src/app/admin/settings/email/email.service.ts","webpack:///./src/app/services/validations.service.ts"],"names":[],"mappings":"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","file":"email-email-module.js","sourcesContent":["/**\n * @license\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://raw.githubusercontent.com/l-lin/angular-datatables/master/LICENSE\n */\nexport { DataTableDirective } from './src/angular-datatables.directive';\nexport { DataTablesModule } from './src/angular-datatables.module';\n//# sourceMappingURL=index.js.map","/**\n * @license\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://raw.githubusercontent.com/l-lin/angular-datatables/master/LICENSE\n */\nimport { Directive, ElementRef, Input } from '@angular/core';\nimport { Subject } from 'rxjs';\nvar DataTableDirective = /** @class */ (function () {\n    function DataTableDirective(el) {\n        this.el = el;\n        /**\n           * The DataTable option you pass to configure your table.\n           */\n        this.dtOptions = {};\n    }\n    DataTableDirective.prototype.ngOnInit = function () {\n        var _this = this;\n        if (this.dtTrigger) {\n            this.dtTrigger.subscribe(function () {\n                _this.displayTable();\n            });\n        }\n        else {\n            this.displayTable();\n        }\n    };\n    DataTableDirective.prototype.ngOnDestroy = function () {\n        if (this.dtTrigger) {\n            this.dtTrigger.unsubscribe();\n        }\n        if (this.dt) {\n            this.dt.destroy(true);\n        }\n    };\n    DataTableDirective.prototype.displayTable = function () {\n        var _this = this;\n        this.dtInstance = new Promise(function (resolve, reject) {\n            Promise.resolve(_this.dtOptions).then(function (dtOptions) {\n                // Using setTimeout as a \"hack\" to be \"part\" of NgZone\n                setTimeout(function () {\n                    _this.dt = $(_this.el.nativeElement).DataTable(dtOptions);\n                    resolve(_this.dt);\n                });\n            });\n        });\n    };\n    DataTableDirective.decorators = [\n        { type: Directive, args: [{\n                    selector: '[datatable]'\n                },] },\n    ];\n    /** @nocollapse */\n    DataTableDirective.ctorParameters = function () { return [\n        { type: ElementRef, },\n    ]; };\n    DataTableDirective.propDecorators = {\n        \"dtOptions\": [{ type: Input },],\n        \"dtTrigger\": [{ type: Input },],\n    };\n    return DataTableDirective;\n}());\nexport { DataTableDirective };\n//# sourceMappingURL=angular-datatables.directive.js.map","/**\n * @license\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://raw.githubusercontent.com/l-lin/angular-datatables/master/LICENSE\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DataTableDirective } from './angular-datatables.directive';\nvar DataTablesModule = /** @class */ (function () {\n    function DataTablesModule() {\n    }\n    DataTablesModule.forRoot = function () {\n        return {\n            ngModule: DataTablesModule\n        };\n    };\n    DataTablesModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [CommonModule],\n                    declarations: [DataTableDirective],\n                    exports: [DataTableDirective]\n                },] },\n    ];\n    return DataTablesModule;\n}());\nexport { DataTablesModule };\n//# sourceMappingURL=angular-datatables.module.js.map","module.exports = \"<div class=\\\"form-group\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\" col-md-12 col-sm-12\\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-body\\\">\\n                    <p class=\\\"h4 text-center py-4 admin-title\\\">Primary Email Address</p>\\n                    <div class=\\\"\\\">\\n                        <h5 class=\\\"admin-subtitle\\\">Add an Email Address</h5>\\n                        <h6>\\n                            <strong>Lorem Ipsum is simply dummy text of the printing and typesetting industry. </strong> Lorem Ipsum\\n                            has been the industry's standard dummy text ever since the 1500s, when an unknown printer took\\n                            a galley of type and scrambled it to make a type specimen book</h6>\\n                    </div>\\n                    <form (ngSubmit)=\\\"emailForm()\\\">\\n                        <input type=\\\"hidden\\\" [(ngModel)]=\\\"emailid\\\" name=\\\"emailid\\\" />\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-md-6 col-sm-12 \\\">\\n                                    <!-- <label for=\\\"defaultFormCardNameEx\\\" class=\\\"grey-text font-weight-light\\\">Email id</label>-->\\n                                    <input type=\\\"text\\\" id=\\\"defaultFormCardNameEx\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"email\\\" name=\\\"email\\\" placeholder=\\\"Email Address\\\">\\n                                </div>\\n                                <div class=\\\"col-md-6 field-button\\\">\\n                                    <button type=\\\"submit\\\" class=\\\"btn btn-warning waves-light btn-submit\\\">Submit</button>\\n                                    <!-- <button type=\\\"submit\\\" class=\\\"btn btn-warning waves-light btn-submit\\\">Add Email Address</button> -->\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </form>\\n\\n                    <div class=\\\"\\\">\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-xl-9 col-lg-11 col-md-12 col-sm-12\\\">\\n                                <table *ngIf=\\\"emailList\\\" datatable class=\\\"table table-hover table-responsive-md table-fixed\\\">\\n                                    <thead>\\n                                        <tr>\\n                                            <th class=\\\"label-email\\\">#</th>\\n                                            <th class=\\\"label-primaryaddress\\\">Primary Email Address</th>\\n                                            <th class=\\\"label-action\\\">Action</th>\\n                                        </tr>\\n                                    </thead>\\n                                    <tbody>\\n                                        <tr *ngFor=\\\"let c of emailList; let i = index\\\">\\n                                            <td class=\\\"col-email\\\">{{i+1}}</td>\\n                                            <td class=\\\"col-primaryaddress\\\">{{c.email}}</td>\\n                                            <td class=\\\"col-action\\\">\\n                                                <span (click)=\\\"deleteEmail(c._id)\\\" class=\\\"btn-delete\\\" mdbRippleRadius>Remove </span>\\n                                            </td>\\n                                        </tr>\\n                                    </tbody>\\n                                </table>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\"","module.exports = \"p.h4.text-center.py-4.admin-title {\\n  color: #494949;\\n  font-weight: normal;\\n  padding-top: 15px !important;\\n  text-align: left !important;\\n  font-size: 16px;\\n  border-bottom: 1px solid #ccc;\\n  margin-bottom: 30px;\\n  padding-bottom: 10px !important;\\n  background: #ffffff;\\n  margin-left: -20px;\\n  border: none;\\n  width: 30%; }\\n\\n.card .card-body {\\n  background: #f6f6f6;\\n  box-shadow: none; }\\n\\n.card {\\n  position: relative;\\n  padding: 25px 30px; }\\n\\nh5.admin-subtitle {\\n  font-size: 15px;\\n  font-weight: 500;\\n  color: #555555; }\\n\\nh6 {\\n  font-size: 13px;\\n  color: #666;\\n  line-height: 22px; }\\n\\nbutton.btn.btn-warning.waves-light.btn-submit,\\n.btn-warning:not([disabled]):not(.disabled):active,\\n.btn-warning:not([disabled]):not(.disabled).active,\\n.show > .btn-warning.dropdown-toggle {\\n  background: #f38e00 !important;\\n  padding: 5px 25px;\\n  font-size: 15px;\\n  text-transform: capitalize;\\n  box-shadow: none;\\n  margin: 0px; }\\n\\n.table {\\n  border: 1px solid #ece4e4; }\\n\\n.table thead th {\\n  border-bottom: 0px;\\n  border: 1px solid #ccc;\\n  color: #32a3bf; }\\n\\ntable.table th, table.table td {\\n  padding-top: .6rem;\\n  padding-bottom: .6rem; }\\n\\n.table th, .table td {\\n  padding: 0.75rem;\\n  vertical-align: top;\\n  border-top: 1px solid #dee2e6;\\n  border-right: 1px solid #ccc; }\\n\\ntd.col-action {\\n  color: #138ead;\\n  cursor: pointer; }\\n\\n.form-group {\\n  margin-bottom: 1.5rem; }\\n\\n.form-control {\\n  font-size: 14px; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { EmailService } from './email.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { CommonService } from '../../../services/common.service';\nimport { ValidationsService } from '../../../services/validations.service';\n\n@Component({\n  selector: 'app-email',\n  templateUrl: './email.component.html',\n  styleUrls: ['./email.component.scss']\n})\nexport class EmailComponent implements OnInit {\n\n  public primaryemailid: String;\n  public email: String;\n\n  public emailList: any;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private _commonService: CommonService,\n    private _validationsService: ValidationsService,\n    private emailService: EmailService\n  ) { }\n\n  ngOnInit() {\n    this.activatedRoute.params.subscribe((params) => {\n      this.primaryemailid = params['primaryemailid'];\n      // console.log(this.primaryemailid);\n      if (!this._validationsService.isEmpty(this.primaryemailid)) {\n        this.getEmailById(this.primaryemailid);\n      }\n    });\n\n    this.getEmailList();\n  }\n\n\n  //saving Code\n  getEmailById(primaryemailid: any) {\n    this.emailService.getEmailById(primaryemailid)\n    .subscribe(res => {\n      this.email = res.data.name;\n      this.primaryemailid = res.data._id;\n    });\n  }\n\n  emailForm() {\n    if (this._validationsService.isEmpty(this.email)) {\n      this._commonService.showMessage('error', 'Email Address should not be empty!');\n      return false;\n    }\n    let fieldemailid;\n    if (!this._validationsService.isEmpty(this.primaryemailid)) {\n      fieldemailid = {\n        email: this.email,\n        primaryemailid: this.primaryemailid\n      };\n    } else {\n      fieldemailid = {\n        email: this.email,\n      };\n    }\n    // console.log(fieldemailid);\n    this.emailService.addEmail(fieldemailid)\n    .subscribe(res => {\n      // console.log(res);\n      if (res.success) {\n        this._commonService.showMessage('success', res.msg);\n        this.email = '';\n        this._commonService.redirectTo('/admin/email');\n      } else {\n        this._commonService.showMessage('error', res.msg);\n      }\n    });\n  }\n\n  //Displaying Code\n\n  updateStatus(event: boolean, c: any) {\n    const fieldEmail = {\n      email: c.email,\n      status: event,\n      primaryemailid: c._id\n    };\n    this.emailService.addEmail(fieldEmail)\n    .subscribe(res => {\n      if (res.success) {\n        this._commonService.showMessage('success', res.msg);\n      } else {\n        this._commonService.showMessage('error', res.msg);\n      }\n    });\n  }\n\n  getEmailList() {\n    this.emailService.getEmail()\n    .subscribe(res => {\n      this.emailList = res.data;\n    });\n  }\n\n  editEmail(Email: any) {\n    this._commonService.redirectTo(`/admin/email/edit/${Email._id}`);\n  }\n\n  deleteEmail(Emailid: any) {\n    this.emailService.deleteEmail(Emailid)\n    .subscribe(res => {\n      if (res.success) {\n        this._commonService.showMessage('success', res.msg);\n        this.getEmailList();\n      } else {\n        this._commonService.showMessage('error', res.msg);\n      }\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MDBBootstrapModulesPro } from '../../../../../ng-uikit-pro-standard';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DataTablesModule } from 'angular-datatables';\nimport { RouterModule, Routes } from '@angular/router';\nimport { EmailComponent } from './email.component';\n\nconst router: Routes = [\n  { path : '', component : EmailComponent  },\n];\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MDBBootstrapModulesPro.forRoot(),\n    RouterModule.forChild(router),\n    FormsModule,\n    ReactiveFormsModule,\n    DataTablesModule,\n  ],\n  declarations: [\n    EmailComponent\n  ]\n})\nexport class EmailModule { }\n","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { map } from 'rxjs/operators';\nimport { CommonService } from '../../../services/common.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmailService {\n\n  public link: String;\n\n  constructor(\n    private _commonService: CommonService,\n    private http: Http\n  ) { \n    this.link = this._commonService.link;\n  }\n\n  addEmail(newEmail: any) {\n    console.log(newEmail);\n    const headers = new Headers();\n    headers.append('Content-type', 'application/json');\n    headers.append('Authorization', this._commonService.getUserToken());\n    return this.http.post(`${this.link}/primaryemails/`, newEmail, {headers: headers})\n    .pipe(map(res => res.json()));\n  }\n\n  getEmail() {\n    const headers = new Headers();\n    headers.append('Content-type', 'application/json');\n    headers.append('Authorization', this._commonService.getUserToken());\n    return this.http.get(`${this.link}/primaryemails/`, {headers: headers})\n    .pipe(map(res => res.json()));\n  }\n\n  deleteEmail(emailId: any) {\n    const headers = new Headers();\n    headers.append('Content-type', 'application/json');\n    headers.append('Authorization', this._commonService.getUserToken());\n    return this.http.delete(`${this.link}/primaryemails/${emailId}`, {headers: headers})\n    .pipe(map(res => res.json()));\n  }\n\n  getEmailById(emailId: any) {\n    const headers = new Headers();\n    headers.append('Content-type', 'application/json');\n    headers.append('Authorization', this._commonService.getUserToken());\n    return this.http.get(`${this.link}/primaryemails/${emailId}`, {headers: headers})\n    .pipe(map(res => res.json()));\n  }\n\n  getEmailByStatus() {\n    const headers = new Headers();\n    headers.append('Content-type', 'application/json');\n    return this.http.get(`${this.link}/primaryemails/get/list`, {headers: headers})\n    .pipe(map(res => res.json()));\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidationsService {\n\n  constructor() { }\n\n  isEmpty(input: any) {\n    if (input === undefined ||\n      input === null ||\n      (typeof input === 'object' && Object.keys(input).length === 0) ||\n      (typeof input === 'string' && input.trim().length === 0)) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  isEmail(email: any) {\n    // tslint:disable-next-line:max-line-length\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  }\n\n  isMobile(mobile: any) {\n    const mob = /[0-9]+/;/[^0-9]/g\n    if (!mob.test(mobile)) {\n      return 'Mobile field shoud have only number';\n    } else if (mobile.length !== 10) {\n      return 'Mobile field should contain only 10 numbers';\n    } else {\n      return true;\n    }\n  }\n\n  isDigit(digit: any) {\n    const dig = /[^0-9]/g;\n    if (!dig.test(digit)) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  isPassword(digit: any) {\n    // const dig = /[^0-9]/g;\n    const regpassword = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/g;\n    if (!regpassword.test(digit)) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  isMinimum(mobile: any) {\n    if (mobile.length >= 10) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  isMaximum(mobile: any) {\n    if (mobile.length <= 13) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  isNumber(input: any) {\n    if (typeof Number(input) === 'number') {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  isPercentage(input: any) {\n    if (typeof Number(input) === 'number') {\n      if (input <= 100) {\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  }\n\n}\n"],"sourceRoot":""}