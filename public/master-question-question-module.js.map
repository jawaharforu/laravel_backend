{"version":3,"sources":["webpack:///./src/app/admin/master/question/question.component.html","webpack:///./src/app/admin/master/question/question.component.scss","webpack:///./src/app/admin/master/question/question.component.ts","webpack:///./src/app/admin/master/question/question.module.ts"],"names":[],"mappings":"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","file":"master-question-question-module.js","sourcesContent":["module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-body\\\">\\n                <form (ngSubmit)=\\\"questionForm()\\\">\\n                        <p class=\\\"h4 text-center py-4 admin-title\\\">Question</p>\\n                        <input type=\\\"hidden\\\" [(ngModel)]=\\\"questionid\\\" name=\\\"questionid\\\">\\n                    <!-- Default input name -->\\n                    <div class=\\\"row\\\">\\n                        <select class=\\\"browser-default form-control col-md-3\\\" id=\\\"defaultFormCardDesiEx\\\" [(ngModel)]=\\\"type\\\" name=\\\"type\\\">\\n                            <option value=\\\"\\\" disabled>--Select Employee--</option>\\n                            <option value=\\\"md\\\">MD</option>\\n                            <option value=\\\"admin\\\">Admin</option>\\n                            <option value=\\\"commonreception\\\">Common Reception</option>\\n                            <option value=\\\"secretary\\\">Department/Secretary</option>\\n                            <option value=\\\"hr\\\">HR</option>\\n                            <option value=\\\"others\\\">Others</option>\\n                            <!-- <option *ngFor=\\\"let s of scaleList\\\" [value]=\\\"s._id\\\">{{ s.options | arrayToString:',' }}</option> -->\\n                        </select>\\n                    </div>\\n                    <div class=\\\"form-group\\\"></div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-11 questionwrapper\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-md-6\\\">\\n                                    <div class=\\\"row\\\">\\n                                        <div class=\\\"col-md-8\\\">\\n                                            <input type=\\\"text\\\" id=\\\"defaultFormCardNameEx\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"question\\\" name=\\\"question\\\" placeholder=\\\"Enter Question\\\">\\n                                        </div>\\n                                        <div class=\\\"col-md-4\\\">\\n                                            <select class=\\\"browser-default form-control\\\" id=\\\"defaultFormCardDesiEx\\\" [(ngModel)]=\\\"scale\\\" name=\\\"scale\\\">\\n                                                <option value=\\\"\\\" disabled>--Select Scale--</option>\\n                                                <option *ngFor=\\\"let s of scaleList\\\" [value]=\\\"s._id\\\">{{ s.options | arrayToString:',' }}</option>\\n                                            </select>\\n                                            <a (click)=\\\"showModal('s')\\\" class=\\\"btn_add\\\">\\n                                                <i class=\\\"fa fa-plus\\\"></i>\\n                                            </a>\\n\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-md-6\\\">\\n                                    <div class=\\\"row\\\">\\n                                        <div class=\\\"col-md-6\\\">\\n                                            <select class=\\\"browser-default form-control\\\" id=\\\"defaultFormCardDesiEx\\\" [(ngModel)]=\\\"assessmenttype\\\" name=\\\"assessmenttype\\\" (change)=\\\"getHeader()\\\">\\n                                                <option value=\\\"\\\" disabled>--Select Assessment--</option>\\n                                                <option *ngFor=\\\"let a of assessmentTypeList\\\" [value]=\\\"a._id\\\">{{ a.name }}</option>\\n                                            </select>\\n                                            <a (click)=\\\"showModal('a')\\\" class=\\\"btn_add\\\">\\n                                                <i class=\\\"fa fa-plus\\\"></i>\\n                                            </a>\\n                                        </div>\\n                                        <div class=\\\"col-md-6\\\">\\n                                            <select class=\\\"browser-default form-control\\\" id=\\\"defaultFormCardDesiEx\\\" [(ngModel)]=\\\"header\\\" name=\\\"designation\\\">\\n                                                <option value=\\\"\\\" disabled>--Select Header--</option>\\n                                                <option *ngFor=\\\"let h of headerList\\\" [value]=\\\"h._id\\\">{{ h.headername }}</option>\\n                                            </select>\\n                                            <a (click)=\\\"showModal('h')\\\" class=\\\"btn_add\\\">\\n                                                <i class=\\\"fa fa-plus\\\"></i>\\n                                            </a>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-md-1 no-padding\\\">\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-primary btn_additem\\\">Submit</button>\\n                        </div>\\n                    </div>\\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"row justify-content-md-center mb-5  mg-0\\\">\\n    <div class=\\\"col-md-12 mt-5 product-list scale-list\\\">\\n        <!--Table-->\\n        <table *ngIf=\\\"questionList\\\" datatable class=\\\"table table-hover table-responsive-md table-fixed\\\">\\n\\n            <!--Table head-->\\n            <thead class=\\\"mdb-color darken-3\\\">\\n                <tr class=\\\"text-white\\\">\\n                    <th class=\\\"label-no\\\">#</th>\\n                    <th class=\\\"label-name\\\">Employee Type</th>\\n                    <th class=\\\"label-name\\\">Question</th>\\n                    <th class=\\\"label-name\\\">Scale</th>\\n                    <th class=\\\"label-name\\\">Assessment</th>\\n                    <th class=\\\"label-name\\\">Header</th>\\n                    <th class=\\\"label-action\\\">Assign</th>\\n                </tr>\\n            </thead>\\n            <tbody>\\n                <tr *ngFor=\\\"let q of questionList; let i = index\\\">\\n                    <th class=\\\"col-no\\\" scope=\\\"row\\\">{{ i + 1 }}</th>\\n                    <td class=\\\"col-name\\\">{{ q.type }}</td>\\n                    <td class=\\\"col-name\\\">{{ q.question }}</td>\\n                    <td class=\\\"col-name\\\">{{ q.scaleid.options | arrayToString:',' }}</td>\\n                    <td class=\\\"col-name\\\">{{ q.assessmenttypeid.name }}</td>\\n                    <td class=\\\"col-name\\\">{{ q.headerid.headername }}</td>\\n                    <td>\\n                        <span (click)=\\\"editQuestion(q)\\\" class=\\\"btn-edit\\\" mdbRippleRadius>Edit </span>/\\n                        <span (click)=\\\"deleteQuestion(q._id)\\\" class=\\\"btn-delete\\\" mdbRippleRadius>Delete</span>\\n                    </td>\\n                </tr>\\n            </tbody>\\n        </table>\\n    </div>\\n</div>\\n\\n<div *ngIf=\\\"isModalShownScale\\\" [config]=\\\"{ show: true, ignoreBackdropClick: true }\\\" (onHidden)=\\\"onHidden('s')\\\" mdbModal #autoShownModal=\\\"mdb-modal\\\"\\n    class=\\\"modal fade\\\" id=\\\"centralModalSuccess\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\" aria-hidden=\\\"true\\\"\\n    style=\\\"overflow: auto;\\\">\\n    <div class=\\\"modal-dialog modal-notify modal-primary modal-lg\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <p class=\\\"heading lead\\\">Scale</p>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\" (click)=\\\"onHidden('s')\\\">\\n                    <span aria-hidden=\\\"true\\\" class=\\\"white-text\\\">×</span>\\n                </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <div class=\\\"\\\">\\n                    <app-scale (getScale)=\\\"getScaleList()\\\"></app-scale>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<div *ngIf=\\\"isModalShownAssess\\\" [config]=\\\"{ show: true, ignoreBackdropClick: true }\\\" (onHidden)=\\\"onHidden('a')\\\" mdbModal\\n    #autoShownModal=\\\"mdb-modal\\\" class=\\\"modal fade\\\" id=\\\"centralModalSuccess\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"\\n    aria-hidden=\\\"true\\\" style=\\\"overflow: auto;\\\">\\n    <div class=\\\"modal-dialog modal-notify modal-primary modal-lg\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <p class=\\\"heading lead\\\">Assessment Type</p>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\" (click)=\\\"onHidden('a')\\\">\\n                    <span aria-hidden=\\\"true\\\" class=\\\"white-text\\\">×</span>\\n                </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <div class=\\\"\\\">\\n                    <app-assessment-type (getAssessmentType)=\\\"getAssessmenttypeList()\\\"></app-assessment-type>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<div *ngIf=\\\"isModalShownHeader\\\" [config]=\\\"{ show: true, ignoreBackdropClick: true }\\\" (onHidden)=\\\"onHidden('h')\\\" mdbModal\\n    #autoShownModal=\\\"mdb-modal\\\" class=\\\"modal fade\\\" id=\\\"centralModalSuccess\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"\\n    aria-hidden=\\\"true\\\" style=\\\"overflow: auto;\\\">\\n    <div class=\\\"modal-dialog modal-notify modal-primary modal-lg\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <p class=\\\"heading lead\\\">Header</p>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\" (click)=\\\"onHidden('h')\\\">\\n                    <span aria-hidden=\\\"true\\\" class=\\\"white-text\\\">×</span>\\n                </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <div class=\\\"\\\">\\n                    <app-header (getHeader)=\\\"getHeaderList()\\\"></app-header>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","module.exports = \"body {\\n  background: #f4f3f9; }\\n\\n.admin-title-header {\\n  margin-bottom: 30px;\\n  font-size: 16px;\\n  font-weight: 400; }\\n\\np.h4.text-center.py-4.admin-title {\\n  color: #494949;\\n  font-weight: normal;\\n  padding-top: 15px !important;\\n  text-align: left !important;\\n  font-size: 16px;\\n  border-bottom: 1px solid #ccc;\\n  margin-bottom: 30px;\\n  padding-bottom: 10px !important;\\n  background: #ffffff;\\n  margin-left: -20px;\\n  border: none;\\n  width: 30%; }\\n\\n.card .card-body {\\n  background: #f6f6f6;\\n  box-shadow: none; }\\n\\n.card {\\n  position: relative;\\n  padding: 25px 30px 50px 30px; }\\n\\n.btn-submit,\\n.btn-outline-purple:not([disabled]):not(.disabled):active,\\n.btn-outline-purple:not([disabled]):not(.disabled).active,\\n.show > .btn-outline-purple.dropdown-toggle,\\n.btn-primary:not([disabled]):not(.disabled):active,\\n.btn-primary:not([disabled]):not(.disabled).active,\\n.show > .btn-primary.dropdown-toggle {\\n  padding: 9px 10px;\\n  background: #f38e00 !important;\\n  box-shadow: none;\\n  font-size: 10px;\\n  margin: 0px; }\\n\\n.scale-list {\\n  border: 1px solid #ccc;\\n  padding: 25px;\\n  background: #fff; }\\n\\n.questionwrapper {\\n  /* background: #dedddd;*/\\n  padding: 0px; }\\n\\ntable.table th, table.table td {\\n  padding-top: 5px;\\n  padding-bottom: 5px; }\\n\\n.col-no {\\n  font-size: 13px;\\n  color: #000;\\n  font-weight: 400;\\n  line-height: 30px;\\n  border-right: 1px solid #ccc; }\\n\\n.col-name {\\n  font-size: 13px;\\n  color: #000;\\n  font-weight: 400;\\n  line-height: 30px;\\n  border-right: 1px solid #ccc; }\\n\\n.col-action {\\n  line-height: 30px; }\\n\\n.label-name, .label-no, .label-Scale, .label-action {\\n  font-size: 13px;\\n  color: #666;\\n  font-weight: 300;\\n  border-right: 1px solid #ccc;\\n  padding-top: 1.1rem !important;\\n  padding-bottom: 1rem !important;\\n  border-bottom: none; }\\n\\n.label-action {\\n  border: none; }\\n\\n.mdb-color.darken-3 {\\n  background-color: #f9f6f6 !important;\\n  border: 1px solid #ccc; }\\n\\ntable.dataTable.no-footer {\\n  border: 1px solid #dbe2e4; }\\n\\nspan.btn-edit, span.btn-delete {\\n  font-size: 13px;\\n  color: #54afc6;\\n  font-weight: 500;\\n  cursor: pointer; }\\n\\n.dataTables_wrapper .dataTables_length, .dataTables_wrapper .dataTables_filter, .dataTables_wrapper .dataTables_info, .dataTables_wrapper .dataTables_processing, .dataTables_wrapper .dataTables_paginate {\\n  color: #666;\\n  font-size: 13px !important; }\\n\\n.form-control {\\n  font-size: 15px; }\\n\\nselect.form-control:not([size]):not([multiple]) {\\n  height: calc(2.25rem + 2px);\\n  float: left;\\n  font-size: 12px;\\n  padding: 0px;\\n  width: calc(100% - 35px); }\\n\\n.btn_add {\\n  color: inherit;\\n  text-decoration: none;\\n  width: 25px;\\n  height: 25px;\\n  float: right !important;\\n  margin: 0px;\\n  box-shadow: none;\\n  background: #54afc6;\\n  border-radius: 50%;\\n  font-size: 15px;\\n  margin-top: 5px; }\\n\\n.btn_add .fa {\\n  margin-left: 8px;\\n  font-size: 12px;\\n  margin-top: 7px;\\n  color: #fff; }\\n\\n.btn_additem, .btn-primary:not([disabled]):not(.disabled):active {\\n  padding: 9px 10px;\\n  background: #f38e00 !important;\\n  box-shadow: none;\\n  font-size: 13px;\\n  margin: 0px;\\n  width: 100%; }\\n\\n.modal-dialog {\\n  margin-top: 120px; }\\n\\n.modal-dialog.modal-notify.modal-primary .modal-header {\\n  background: transparent;\\n  box-shadow: none; }\\n\\nbutton.close {\\n  background: #666;\\n  border-radius: 50%;\\n  height: 20px;\\n  width: 20px;\\n  line-height: 0px;\\n  padding: 12px;\\n  margin: -1rem -1rem -1rem auto;\\n  font-weight: normal;\\n  font-size: 20px;\\n  margin: 0px !important; }\\n\\nbutton.close .white-text {\\n  margin-left: -5px; }\\n\\n.modal-dialog.modal-notify .heading {\\n  color: #fff;\\n  background: #666;\\n  margin-left: -16px;\\n  margin-top: -16px;\\n  width: 30%; }\\n\\n.no-padding {\\n  padding-right: 0px; }\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ModalDirective } from '../../../../../ng-uikit-pro-standard';\n\nimport { CommonService } from '../../../services/common.service';\nimport { ValidationsService } from '../../../services/validations.service';\nimport { QuestionService } from '../JD/question/services/question.service';\nimport { HeaderService } from '../JD/header/services/header.service';\nimport { ScaleService } from '../JD/scale/services/scale.service';\nimport { AssessmentTypeService } from '../JD/assessment-type/assessment-type.service';\n\n@Component({\n  selector: 'app-question',\n  templateUrl: './question.component.html',\n  styleUrls: ['./question.component.scss']\n})\nexport class QuestionComponent implements OnInit {\n\n  @ViewChild('autoShownModal') public autoShownModal: ModalDirective;\n  public isModalShownScale: Boolean = false;\n  public isModalShownHeader: Boolean = false;\n  public isModalShownAssess: Boolean = false;\n\n  public type: String = '';\n  public questionid: String = '';\n  public question: String = '';\n  public scale: String = '';\n  public assessmenttype: String = '';\n  public header: String = '';\n  public questionList: any = '';\n  public scaleList: any = '';\n  public headerList: any = '';\n  public assessmentTypeList: any = '';\n\n  constructor(\n    private _validationsService: ValidationsService,\n    private _commonService: CommonService,\n    private questionService: QuestionService,\n    private scaleService: ScaleService,\n    private headerService: HeaderService,\n    private assessmentTypeService: AssessmentTypeService,\n  ) { }\n\n  ngOnInit() {\n    this.getScaleList();\n    this.getAssessmenttypeList();\n    this.getQuestionList();\n  }\n\n  getQuestionList() {\n    this.questionService.getQuestion()\n    .subscribe(res => {\n      console.log(res);\n      this.questionList = res.data;\n    });\n  }\n\n  getScaleList() {\n    this.scaleService.getScaleList()\n    .subscribe(res => {\n      this.scaleList = res.data;\n    });\n  }\n\n  getAssessmenttypeList() {\n    this.assessmentTypeService.getAssessmenttype()\n    .subscribe(res => {\n      this.assessmentTypeList = res.data;\n    });\n  }\n\n  getHeader() {\n    if (this._validationsService.isEmpty(this.assessmenttype)) {\n      this._commonService.showMessage('error', 'Assessmenttype should not be empty!');\n      return false;\n    }\n    this.getHeaderList();\n  }\n\n  getHeaderList() {\n    this.headerService.getHeaderByAssessmenttype(this.assessmenttype)\n    .subscribe(res => {\n      this.headerList = res.data;\n    });\n  }\n\n  public showModal(modal: any): void {\n    console.log(modal);\n    if (modal === 's') {\n      this.isModalShownScale = true;\n    } else if (modal === 'a') {\n      this.isModalShownAssess = true;\n    } else {\n      this.isModalShownHeader = true;\n    }\n  }\n\n  public hideModal(): void {\n      this.autoShownModal.hide();\n  }\n\n  public onHidden(modal: any): void {\n    if (modal === 's') {\n      this.isModalShownScale = false;\n    } else if (modal === 'a') {\n      this.isModalShownAssess = false;\n    } else {\n      this.isModalShownHeader = false;\n    }\n  }\n\n  questionForm() {\n    if (this._validationsService.isEmpty(this.type)) {\n      this._commonService.showMessage('error', 'Please select Employee!');\n      return false;\n    }\n    if (this._validationsService.isEmpty(this.type)) {\n      this._commonService.showMessage('error', 'Please select Assessment type!');\n      return false;\n    }\n    if (this._validationsService.isEmpty(this.question)) {\n      this._commonService.showMessage('error', 'Question should not be empty!');\n      return false;\n    }\n    if (this._validationsService.isEmpty(this.scale)) {\n      this._commonService.showMessage('error', 'Please select scale!');\n      return false;\n    }\n    if (this._validationsService.isEmpty(this.assessmenttype)) {\n      this._commonService.showMessage('error', 'Please select assessment!');\n      return false;\n    }\n    if (this._validationsService.isEmpty(this.header)) {\n      this._commonService.showMessage('error', 'Please select header!');\n      return false;\n    }\n\n    let fields;\n    if (!this._validationsService.isEmail(this.questionid)) {\n      fields = {\n        questionid: this.questionid,\n        question: this.question,\n        scaleid: this.scale,\n        assessmenttypeid: this.assessmenttype,\n        headerid: this.header,\n        type: this.type\n      };\n    } else {\n      fields = {\n        question: this.question,\n        scaleid: this.scale,\n        assessmenttypeid: this.assessmenttype,\n        headerid: this.header,\n        type: this.type\n      };\n    }\n    this.questionService.addQuestion(fields)\n    .subscribe(res => {\n      if (res.success) {\n        this._commonService.showMessage('success', res.msg);\n        // this._commonService.redirectTo('/admin/jd/');\n        this.questionid = '';\n        this.question = '';\n        this.scale = '';\n        this.assessmenttype = '';\n        this.header = '';\n        this.type = '';\n        this.getQuestionList();\n      } else {\n        this._commonService.showMessage('error', res.msg);\n      }\n    });\n  }\n\n  editQuestion(q: any) {\n    this.questionid = q._id;\n    this.question = q.question;\n    this.scale = q.scaleid._id;\n    this.assessmenttype = q.assessmenttypeid._id;\n    this.header = q.headerid._id;\n    this.type = q.type;\n    window.scrollTo(0, 0);\n  }\n\n  deleteQuestion(questionid: any) {\n    this.questionService.deleteQuestion(questionid)\n    .subscribe(res => {\n      if (res.success) {\n        this._commonService.showMessage('success', res.msg);\n        this.getQuestionList();\n      } else {\n        this._commonService.showMessage('error', res.msg);\n      }\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MDBBootstrapModulesPro } from '../../../../../ng-uikit-pro-standard';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DataTablesModule } from 'angular-datatables';\nimport { QuestionComponent } from './question.component';\nimport { SharedModule } from '../../share/share.module';\n\nconst router: Routes = [\n  { path : '', component : QuestionComponent  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MDBBootstrapModulesPro.forRoot(),\n    RouterModule.forChild(router),\n    FormsModule,\n    ReactiveFormsModule,\n    DataTablesModule,\n    SharedModule\n  ],\n  declarations: [\n    QuestionComponent\n  ]\n})\nexport class QuestionModule { }\n"],"sourceRoot":""}