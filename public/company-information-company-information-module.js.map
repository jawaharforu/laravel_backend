{"version":3,"sources":["webpack:///./src/app/admin/settings/company-information/company-information.component.html","webpack:///./src/app/admin/settings/company-information/company-information.component.scss","webpack:///./src/app/admin/settings/company-information/company-information.component.ts","webpack:///./src/app/admin/settings/company-information/company-information.module.ts","webpack:///./src/app/admin/settings/company-information/company-information.service.ts"],"names":[],"mappings":"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","file":"company-information-company-information-module.js","sourcesContent":["module.exports = \"<div class=\\\"form-group\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\" col-md-12 col-sm-12\\\">\\n\\n            <div class=\\\"card\\\">\\n\\n                <div class=\\\"card-body\\\">\\n                    <form (ngSubmit)=\\\"companyinformationForm()\\\">\\n\\n\\n\\n                        <p class=\\\"h4 text-center py-4 admin-title\\\">Company Information</p>\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"form-group col-md-12 col-sm-12\\\">\\n                                <div class=\\\"company-logo\\\">\\n                                    <img [src]=\\\"logo\\\" />\\n                                </div>\\n                                <label for=\\\"\\\" class=\\\"label-logo\\\"> Company Logo</label>\\n                                <input type=\\\"file\\\" class=\\\"btn file-choose \\\" name=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" />\\n                                <button type=\\\"button\\\" class=\\\"btn btn-upload\\\" mdbWavesEffect (click)=\\\"uploader.uploadAll()\\\" [disabled]=\\\"!uploader.getNotUploadedItems().length\\\">\\n                                    <i class=\\\"fa fa-cloud-upload mr-1\\\"></i> Upload</button>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"form-group col-md-6 col-sm-12 \\\">\\n                                <label for=\\\"defaultFormCardNameEx\\\" class=\\\"grey-text font-weight-light\\\">Company Name</label>\\n                                <input type=\\\"text\\\" id=\\\"defaultFormCardNameEx\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"companyname\\\" name=\\\"companyname\\\">\\n                            </div>\\n                            <div class=\\\"form-group col-md-6 col-sm-12 \\\">\\n                                <label for=\\\"defaultFormCardNameEx\\\" class=\\\"grey-text font-weight-light\\\">Job Title</label>\\n                                <input type=\\\"text\\\" id=\\\"defaultFormCardNameEx\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"jobtitle\\\" name=\\\"jobtitle\\\">\\n                            </div>\\n                        </div>\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"form-group col-md-6 col-sm-12 \\\">\\n                                <label for=\\\"defaultFormCardNameEx\\\" class=\\\"grey-text font-weight-light\\\">Industry</label>\\n                                <select class=\\\"browser-default form-control\\\" id=\\\"defaultFormCardDesiEx\\\" [(ngModel)]=\\\"industry\\\" name=\\\"industry\\\">\\n                                    <option *ngFor=\\\"let industry of industries\\\" value=\\\"{{industry.industryname}}\\\">{{industry.industryname}}</option>\\n                                </select>\\n                            </div>\\n                            <div class=\\\"form-group col-md-6 col-sm-12 \\\">\\n                                <label for=\\\"defaultFormCardNameEx\\\" class=\\\"grey-text font-weight-light\\\">No. of Employees</label>\\n                                <select class=\\\"browser-default form-control\\\" id=\\\"defaultFormCardDesiEx\\\" [(ngModel)]=\\\"noofemployees\\\" name=\\\"noofemployees\\\">\\n                                    <option *ngFor=\\\"let employee of no_of_employees\\\" value=\\\"{{employee.employeesCount}}\\\">{{employee.employeesCount}}</option>\\n                                </select>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"form-group col-md-6 col-sm-12 browser-default\\\">\\n                                <label class=\\\"grey-text font-weight-light\\\" for=\\\"phonenumber\\\">Official Phone Number:</label>\\n                                <div class=\\\"row\\\">\\n                                    <div class=\\\"col-md-4 col-country-code\\\">\\n                                        <select class=\\\" selectpicker form-control browser-default mdb-select browser-default country-code\\\" [(ngModel)]=\\\"countrycode\\\"\\n                                            name=\\\"countrycode\\\">\\n                                            <option *ngFor=\\\"let job of countryList\\\" value=\\\"{{job.dial_code}}\\\">{{job.dial_code}}</option>\\n                                        </select>\\n                                    </div>\\n                                    <div class=\\\"col-md-8\\\">\\n                                        <input type=\\\"text\\\" class=\\\"waves-light form-control browser-default\\\" [(ngModel)]=\\\"companycontact\\\" name=\\\"companycontact\\\" id=\\\"phonenumber\\\"\\n                                            maxlength=\\\"13\\\">\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"form-group col-md-12 col-sm-12\\\">\\n                                <label for=\\\"defaultFormCarddescEx\\\" class=\\\"grey-text font-weight-light control-label \\\">Company Address</label>\\n                                <textarea type=\\\"text\\\" id=\\\"defaultFormCarddescEx\\\" class=\\\"md-textarea md-textarea-auto form-control\\\" mdbInputDirective [(ngModel)]=\\\"companyaddress\\\"\\n                                    rows=\\\"5\\\" name=\\\"companyaddress\\\"></textarea>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"form-group col-md-4 col-sm-12 \\\">\\n                                <label for=\\\"defaultFormCardNameEx\\\" class=\\\"grey-text font-weight-light\\\">Country</label>\\n                                <select class=\\\"browser-default form-control\\\" id=\\\"defaultFormCardDesiEx\\\" [(ngModel)]=\\\"country\\\" name=\\\"country\\\">\\n                                    <option *ngFor=\\\"let job of countryList\\\" [value]=\\\"job.name\\\">{{job.name}}</option>\\n                                </select>\\n                            </div>\\n                            <div class=\\\"form-group col-md-4 col-sm-12 \\\">\\n                                <label for=\\\"defaultFormCardNameEx\\\" class=\\\"grey-text font-weight-light\\\">State</label>\\n                                <input type=\\\"text\\\" id=\\\"defaultFormCardNameEx\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"state\\\" name=\\\"state\\\">\\n                            </div>\\n                            <div class=\\\"form-group col-md-4 col-sm-12 \\\">\\n                                <label for=\\\"defaultFormCardNameEx\\\" class=\\\"grey-text font-weight-light\\\">City</label>\\n                                <input type=\\\"text\\\" id=\\\"defaultFormCardNameEx\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"city\\\" name=\\\"city\\\">\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"field-button float-right\\\">\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-submit btn-save\\\">SUBMIT</button>\\n                        </div>\\n                    </form>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\"","module.exports = \"p.h4.text-center.py-4.admin-title {\\n  color: #494949;\\n  font-weight: normal;\\n  padding-top: 15px !important;\\n  text-align: left !important;\\n  font-size: 16px;\\n  border-bottom: 1px solid #ccc;\\n  margin-bottom: 30px;\\n  padding-bottom: 10px !important;\\n  background: #ffffff;\\n  margin-left: -20px;\\n  border: none;\\n  width: 30%; }\\n\\n.card .card-body {\\n  background: #f6f6f6;\\n  box-shadow: none; }\\n\\n.card {\\n  position: relative;\\n  padding: 25px 30px 25px 30px; }\\n\\n.company-logo {\\n  width: 130px;\\n  float: left;\\n  background: #ccc;\\n  margin-right: 15px; }\\n\\n.company-logo img {\\n  width: 100%; }\\n\\ninput.btn.file-choose {\\n  width: 60%;\\n  padding: 5px;\\n  border: 1px solid #ccc;\\n  box-shadow: none; }\\n\\nbutton.btn.btn-upload {\\n  padding: 9px;\\n  background: #ec9d08;\\n  box-shadow: none;\\n  padding-left: 0px;\\n  cursor: pointer; }\\n\\n.label-logo {\\n  width: 50%;\\n  margin-top: 30px;\\n  padding-left: 10px;\\n  margin-bottom: 0px;\\n  color: #666;\\n  font-weight: 400;\\n  font-size: 12px; }\\n\\n.btn:not([disabled]):not(.disabled):active, .btn:not([disabled]):not(.disabled).active {\\n  box-shadow: none; }\\n\\nlabel.grey-text.font-weight-light {\\n  font-size: 13px;\\n  color: #212529 !important;\\n  font-weight: 400 !important; }\\n\\nbutton.btn.btn-submit.btn-save {\\n  background: #f38e00;\\n  padding: 5px 25px;\\n  font-size: 15px;\\n  margin-top: 15px;\\n  text-transform: capitalize;\\n  box-shadow: none; }\\n\\n.form-control {\\n  font-size: 14px; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { CommonService } from '../../../services/common.service';\nimport { ValidationsService } from '../../../services/validations.service';\nimport { FileUploader } from 'ng2-file-upload/ng2-file-upload';\nimport { CompanyInformationService } from './company-information.service';\nimport { ContactusService } from '../../frontend/contactus/contactus.service';\nimport { CompanyService} from '../../company/company.service';\n\n@Component({\n  selector: 'app-company-information',\n  templateUrl: './company-information.component.html',\n  styleUrls: ['./company-information.component.scss']\n})\nexport class CompanyInformationComponent implements OnInit {\n  public countrycode: String = '+91';\n  public companycontact: String = '';\n  public companyaddress: String = '';\n  public country: String = '';\n  public state: String = '';\n  public city: String = '';\n  public uploader: FileUploader;\n  public logo: String = '';\n  public countryList: any = '';\n  public companyid: String = '';\n  public companyname: String = '';\n  public jobtitle: String = '';\n  // tslint:disable-next-line:member-ordering\n  public industry: String = '';\n  public industries: any[]= [\n    {industryname: 'Agriculture & Forestry/Wildlife'},\n    {industryname: 'Business & Information'},\n    {industryname: 'Construction/Utilities/Contracting'},\n    {industryname: 'Education'},\n    {industryname: 'Finance & Insurance'},\n    {industryname: 'Food & Hospitality'},\n    {industryname: 'Gaming'},\n    {industryname: 'Health Services'},\n    {industryname: 'Motor Vehicle'},\n    {industryname: 'Natural Resources/Environmental'},\n    {industryname: 'Other'},\n    {industryname: 'Personal Services'},\n    {industryname: 'Real Estate & Housing'},\n    {industryname: 'Safety/Security & Legal'},\n    {industryname: 'Transportation'}\n  ];\n\n  // tslint:disable-next-line:member-ordering\n  public noofemployees: String;\n  public no_of_employees: any[] = [\n    {employeesCount: '10-50'},\n    {employeesCount: '50-100'},\n    {employeesCount: '100-500'},\n    {employeesCount: '500-1000'},\n    {employeesCount: '1000-5000'},\n    {employeesCount: '5000 above'}\n  ];\n  \n\n  constructor(\n    private _commonService: CommonService,\n    private _validationsService: ValidationsService,\n    private companyInformationService: CompanyInformationService,\n    private contactusService: ContactusService,\n    private companyService: CompanyService,\n  ) {\n    this.logo = this._commonService.serverUrl + 'sample-logo-design.jpg';\n    this.uploader = new FileUploader({url: this._commonService.uploadImage, itemAlias: 'file'});\n  }\n\n  ngOnInit() {\n    this.getCountryList();\n    this.getCompanyInfo();\n    this.uploader.onAfterAddingFile = (file) => { file.withCredentials = false; };\n    this.uploader.onCompleteItem = (_item: any, response: any, _status: any, _headers: any) => {\n      const res: any = JSON.parse(response);\n      if (res.success) {\n        this._commonService.showMessage('success', res.msg);\n        this.logo = this._commonService.serverUrl + res.filename;\n      } else {\n        this._commonService.showMessage('error', res.msg);\n      }\n    };\n  }\n\n  getCountryList() {\n    this.contactusService.getCountryList()\n    .subscribe(res => {\n      this.countryList = res.data;\n    });\n  }\n\n  getCompanyInfo() {\n    this.companyInformationService.getCompanyInfo()\n    .subscribe(res => {\n      this.companyid = res.data._id;\n      this.companyname = res.data.companyname;\n      this.jobtitle = res.data.jobtitle;\n      this.industry = res.data.industry;\n      this.noofemployees = res.data.noofemployees;\n      this.countrycode = res.data.countrycode;\n      this.companycontact = res.data.companycontact;\n      this.companyaddress = res.data.companyaddress;\n      this.country = res.data.country;\n      this.state = res.data.state;\n      this.city = res.data.city;\n      // tslint:disable-next-line:max-line-length\n      this.logo = (res.data.logo === '' || res.data.logo === undefined) ? this._commonService.serverUrl + 'sample-logo-design.jpg' : this._commonService.serverUrl + res.data.logo;\n    });\n  }\n\n  companyinformationForm() {\n\n    if (this._validationsService.isEmpty(this.companyname)) {\n      this._commonService.showMessage('error', 'Company Name should not be empty!');\n      return false;\n    }\n\n    if (this._validationsService.isEmpty(this.jobtitle)) {\n      this._commonService.showMessage('error', 'Job Title should not be empty!');\n      return false;\n    }\n\n    if (this._validationsService.isEmpty(this.industry)) {\n      this._commonService.showMessage('error', 'Please select Industry!');\n      return false;\n    }\n\n    if (this._validationsService.isEmpty(this.noofemployees)) {\n      this._commonService.showMessage('error', 'Please select Number of Employees!');\n      return false;\n    }\n\n    if (this._validationsService.isEmpty(this.countrycode)) {\n      this._commonService.showMessage('error', 'Please select countrycode!');\n      return false;\n    }\n\n    if (this._validationsService.isEmpty(this.companycontact)) {\n      this._commonService.showMessage('error', 'Phone Number should not be empty!');\n      return false;\n    }\n    if (this._validationsService.isDigit(this.companycontact)) {\n      this._commonService.showMessage('error', 'Phone Number should have only digits!');\n      return false;\n    }\n    if (this._validationsService.isMinimum(this.companycontact)) {\n      this._commonService.showMessage('error', 'Phone Number should have atleast 10 digits!');\n      return false;\n    }\n    if (this._validationsService.isMaximum(this.companycontact)) {\n      this._commonService.showMessage('error', 'Phone Number should not exceed 13 digits!');\n      return false;\n    }\n\n    if (this._validationsService.isEmpty(this.companyaddress)) {\n      this._commonService.showMessage('error', 'Company Address should not be empty!');\n      return false;\n    }\n\n    if (this._validationsService.isEmpty(this.country)) {\n      this._commonService.showMessage('error', 'Please select Country!');\n      return false;\n    }\n\n    if (this._validationsService.isEmpty(this.state)) {\n      this._commonService.showMessage('error', 'State should not be empty!');\n      return false;\n    }\n\n    if (this._validationsService.isEmpty(this.city)) {\n      this._commonService.showMessage('error', 'City should not be empty!');\n      return false;\n    }\n\n    const companyField = {\n      jobtitle: this.jobtitle,\n      companyname: this.companyname,\n      industry: this.industry,\n      noofemployees: this.noofemployees,\n      companycontact: this.companycontact,\n      companyaddress: this.companyaddress,\n      country: this.country,\n      state: this.state,\n      city: this.city,\n      countrycode: this.countrycode,\n      status: true,\n      logo: this.logo.replace(this._commonService.serverUrl, ''),\n      companyid: this.companyid\n    };\n\n    this.companyService.addCompany(companyField)\n    .subscribe(res => {\n      if (res.success) {\n        this._commonService.showMessage('success', res.msg);\n      } else {\n        this._commonService.showMessage('error', res.msg);\n      }\n    });\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MDBBootstrapModulesPro } from '../../../../../ng-uikit-pro-standard';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DataTablesModule } from 'angular-datatables';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CompanyInformationComponent } from './company-information.component';\nimport { CKEditorModule } from 'ng2-ckeditor';\nimport { SharedModule } from '../../share/share.module';\n\nconst router: Routes = [\n  { path : '', component : CompanyInformationComponent  },\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MDBBootstrapModulesPro.forRoot(),\n    RouterModule.forChild(router),\n    FormsModule,\n    ReactiveFormsModule,\n    DataTablesModule,\n    CKEditorModule,\n    SharedModule\n  ],\n  declarations: [\n    CompanyInformationComponent,\n    \n  ]\n})\nexport class CompanyInformationModule { }\n","import { Injectable } from '@angular/core';\nimport { CommonService } from '../../../services/common.service';\nimport { Http, Headers } from '@angular/http';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CompanyInformationService {\n\n  public link: String;\n\n  constructor(\n    private _commonService: CommonService,\n    private http: Http\n  ) {\n    this.link = this._commonService.link;\n  }\n\n  getCompanyInfo() {\n    const headers = new Headers();\n    headers.append('Content-type', 'application/json');\n    headers.append('Authorization', this._commonService.getUserToken());\n    return this.http.get(`${this.link}/companies/get/companyinfo`, {headers: headers})\n    .pipe(map(res => res.json()));\n  }\n}\n"],"sourceRoot":""}