{"version":3,"sources":["webpack:///./src/app/frontend/login/login.component.html","webpack:///./src/app/frontend/login/login.component.scss","webpack:///./src/app/frontend/login/login.component.ts","webpack:///./src/app/frontend/login/login.module.ts","webpack:///./src/app/services/validations.service.ts"],"names":[],"mappings":"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","file":"frontend-login-login-module.js","sourcesContent":["module.exports = \"<section class=\\\"ccontainer-fuild login_main\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-8 col-md-6 col-sm-12 login_image hidden-sm-down\\\">\\n    </div>\\n    <!-- <div class=\\\"col-lg-4 col-md-6 col-sm-12 form-container\\\">\\n      <a [routerLink]=\\\"['/']\\\"><img src=\\\"../../../assets/img/epes-logo-footer.png\\\" class=\\\"logo_login\\\"></a>\\n      <form class=\\\"login-form\\\" id=\\\"login-form\\\" (ngSubmit)=\\\"getOTP()\\\">\\n        <h3 class=\\\"login-heading\\\">Login</h3>\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"form-check\\\">\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" id=\\\"materialGroupExample1\\\" name=\\\"groupOfMaterialRadios\\\">\\n            <label class=\\\"form-check-label\\\" [(ngModel)]=\\\"loginType\\\" for=\\\"materialGroupExample1\\\" value=\\\"admin\\\">Admin</label>\\n          </div>\\n          <div class=\\\"form-check\\\">\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" id=\\\"materialGroupExample2\\\" name=\\\"groupOfMaterialRadios\\\"\\n              [(ngModel)]=\\\"loginType\\\" value=\\\"employee\\\">\\n            <label class=\\\"form-check-label\\\" for=\\\"materialGroupExample2\\\">Employee</label>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <input placeholder=\\\"Email Address\\\" type=\\\"text\\\" id=\\\"defaultForm-email\\\" [(ngModel)]=\\\"field_username\\\" name=\\\"field_username\\\"\\n            class=\\\"form-control waves-light\\\">\\n        </div>\\n        <input type=\\\"submit\\\" class=\\\"btn btn-default btn_login\\\" value=\\\"Get OTP\\\">\\n    </div>\\n    </form> -->\\n    <div class=\\\"col-lg-4 col-md-6 col-sm-12 form-container\\\">\\n      <a [routerLink]=\\\"['/']\\\"><img src=\\\"../../../assets/img/epes-logo-footer.png\\\" class=\\\"logo_login\\\"></a>\\n      <form class=\\\"login-form\\\" id=\\\"login-form\\\" (ngSubmit)=\\\"getOTP()\\\">\\n        <h3 class=\\\"login-heading\\\">Login</h3>\\n        <div class=\\\"form-group\\\">\\n          <!-- <label class=\\\"login-label\\\">Enter your email address</label> -->\\n          <input placeholder=\\\"Email Address\\\" type=\\\"text\\\" id=\\\"defaultForm-email\\\" [(ngModel)]=\\\"field_username\\\" name=\\\"field_username\\\"\\n            class=\\\"form-control waves-light\\\">\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <!-- <label class=\\\"login-label\\\">Enter your Password</label> -->\\n          <input placeholder=\\\"Password\\\" type=\\\"password\\\" id=\\\"defaultForm-pass\\\" [(ngModel)]=\\\"field_password\\\" name=\\\"field_password\\\"\\n            class=\\\"form-control waves-light\\\">\\n        </div>\\n\\n        <div class=\\\"text-center\\\">\\n          <input type=\\\"submit\\\" class=\\\"btn btn-default btn_login\\\" value=\\\"Login\\\">\\n          <!-- <a class=\\\"sign-up-link\\\" [routerLink]=\\\"['/registration']\\\">Sign Up</a> -->\\n        </div>\\n\\n      </form>\\n      <div class=\\\"clearfix\\\"></div>\\n    </div>\\n  </div>\\n</section>\\n\\n<div *ngIf=\\\"isModalShown\\\" [config]=\\\"{ show: true, ignoreBackdropClick: true }\\\" (onHidden)=\\\"onHidden()\\\" mdbModal\\n  #autoShownModal=\\\"mdb-modal\\\" class=\\\"modal fade\\\" id=\\\"centralModalSuccess\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"\\n  aria-hidden=\\\"true\\\" style=\\\"overflow: auto;\\\">\\n  <div class=\\\"modal-login modal-dialog modal-notify modal-sm\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\" (click)=\\\"onHidden()\\\">\\n        <span aria-hidden=\\\"true\\\" class=\\\"black-text close-btn\\\">×</span>\\n      </button>\\n      <div class=\\\"modal-body\\\">\\n        <form (ngSubmit)=\\\"loginForm()\\\">\\n          <div class=\\\"\\\">\\n            <label class=\\\"label-otp\\\">Enter OTP</label>\\n            <input type=\\\"hidden\\\" name=\\\"otpid\\\" [(ngModel)]=\\\"otpid\\\" />\\n            <input class=\\\"input-otp\\\" type=\\\"text\\\" name=\\\"otp\\\" [(ngModel)]=\\\"otp\\\" />\\n          </div>\\n          <a (click)=\\\"getOTP()\\\" class=\\\"rotp\\\">Resend OTP</a>\\n          <input type=\\\"submit\\\" class=\\\"btn btn-default btn-otp-submit\\\" value=\\\"Login\\\">\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \".login_image img {\\n  max-width: 100%;\\n  height: 100vh; }\\n\\n.login_main {\\n  padding: 0px 15px 0px 0px;\\n  background: url('bg-contact.jpg');\\n  background-size: cover;\\n  min-height: 100vh;\\n  color: aliceblue; }\\n\\n.form-container {\\n  padding-top: 100px;\\n  height: 100%;\\n  padding-left: 0;\\n  width: 100%;\\n  display: inline-block;\\n  position: relative; }\\n\\n.login-heading {\\n  color: #fff;\\n  font-weight: 500;\\n  font-size: 20px; }\\n\\np {\\n  margin: 0 0 10px; }\\n\\n.login-form {\\n  max-width: 60%;\\n  margin-left: 10%; }\\n\\n.login-label {\\n  font-size: 14px;\\n  margin-bottom: 5px; }\\n\\n.btn_login,\\n.btn-default:not([disabled]):not(.disabled):active,\\n.btn-default:not([disabled]):not(.disabled).active,\\n.show > .btn-default.dropdown-toggle {\\n  background-color: #fcb827 !important;\\n  color: #000 !important;\\n  font-size: 15px;\\n  font-weight: 300;\\n  padding: 7px 25px;\\n  border-radius: 5px;\\n  float: left;\\n  box-shadow: none; }\\n\\nimg.logo_login {\\n  /* width: 150px;\\n    margin-top: 25px;\\n    margin-left: 10%;*/\\n  width: 170px;\\n  margin-top: -25px;\\n  margin-left: 10%;\\n  margin-bottom: 44px; }\\n\\n@media only screen and (max-width: 767px) {\\n  .hidden-sm-down {\\n    display: none; } }\\n\\n/*------logo-img-size setting---*/\\n\\n.login_image img {\\n  max-width: 100%;\\n  height: auto; }\\n\\n.sign-up-link {\\n  color: #fff;\\n  display: block;\\n  padding-top: 10px;\\n  font-weight: 500;\\n  text-decoration: none;\\n  margin-top: 5px;\\n  float: right;\\n  margin-right: 15px; }\\n\\n#login-form {\\n  margin-top: 30px; }\\n\\n.sign-up-link:hover {\\n  text-decoration: underline; }\\n\\n.input-otp {\\n  width: 100%;\\n  border: 1px solid #ccc;\\n  height: 35px;\\n  border-radius: 5px;\\n  padding: 0px 15px; }\\n\\n.label-otp {\\n  font-size: 15px;\\n  color: #555; }\\n\\n.btn-otp-submit {\\n  background: #fcb827 !important;\\n  padding: 8px 20px;\\n  box-shadow: none;\\n  float: right;\\n  margin-right: 0px; }\\n\\n.rotp {\\n  padding-top: 15px;\\n  display: block;\\n  float: left;\\n  font-size: 13px; }\\n\\n.modal-sm {\\n  margin-top: 10%; }\\n\\n.close {\\n  color: #555;\\n  z-index: 9999; }\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ValidationsService } from '../../services/validations.service';\nimport { CommonService } from '../../services/common.service';\n// import { UserService } from '../../admin/user/user.service';\nimport { ModalDirective } from '../../../../ng-uikit-pro-standard';\nimport { CmsService } from '../services/cms.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  public field_username: String = '';\n  public field_password: String = '';\n  public otpid: String = '';\n  public otp: String = '';\n  public loginType: String = '';\n  @ViewChild('autoShownModal') public autoShownModal: ModalDirective;\n  public isModalShown: Boolean = false;\n\n\n  constructor(\n    public _validationsService: ValidationsService,\n    public _commonService: CommonService,\n    public userService: CmsService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  getOTP() {\n    if (this._validationsService.isEmpty(this.field_username)) {\n      this._commonService.showMessage('error', 'Email should not be empty!');\n      return false;\n    }\n    if (!this._validationsService.isEmail(this.field_username)) {\n      this._commonService.showMessage('error', 'Enter Valid Email Address!');\n      return false;\n    }\n\n    if (this._validationsService.isEmpty(this.field_password)) {\n      this._commonService.showMessage('error', 'Password should not be empty!');\n      return false;\n    }\n\n    const fields = {\n      email: this.field_username,\n      password: this.field_password\n    };\n\n\n    this.userService.getToken(fields)\n    .subscribe(otpres => {\n      if (otpres.login_status === 'OK') {\n        this.otpid = otpres.id;\n        // this._commonService.redirectTo(otpres.redirect);\n        //window.location.href = 'http://localhost:8000/ng/ver1';\n        // this.showModal();\n      } else {\n        this._commonService.showMessage('error', otpres.message);\n        // this._commonService.showMessage('error', otpres.msg);\n      }\n    });\n  }\n\n  public showModal(): void {\n    this.isModalShown = true;\n  }\n\n  public hideModal(): void {\n    this.autoShownModal.hide();\n  }\n\n  public onHidden(): void {\n    this.isModalShown = false;\n  }\n\n  loginForm() {\n    if (this._validationsService.isEmpty(this.field_username)) {\n      this._commonService.showMessage('error', 'Username should not be empty!');\n      return false;\n    }\n    if (!this._validationsService.isEmail(this.field_username)) {\n      this._commonService.showMessage('error', 'Enter Valid Email Address!');\n      return false;\n    }\n    // if (this._validationsService.isEmpty(this.otp)) {\n    //   this._commonService.showMessage('error', 'OTP should not be empty!');\n    //   return false;\n    // }\n    // if (this._validationsService.isEmpty(this.otpid)) {\n    //   this._commonService.showMessage('error', 'Click resend otp to get new OTP');\n    //   return false;\n    // }\n\n    if (this._validationsService.isEmpty(this.field_password)) {\n      this._commonService.showMessage('error', 'Password should not be empty!');\n      return false;\n    }\n\n    // if (this._validationsService.isPassword(this.field_password)) {\n    // tslint:disable-next-line:max-line-length\n    //   this._commonService.showMessage('error', 'Password Minimum eight characters, at least one uppercase letter, one lowercase letter, one number and one special character!');\n    //   return false;\n    // }\n    const otpField = {\n      otpid: this.otpid,\n      otp: this.otp\n    };\n    this.userService.checkOTP(otpField)\n    .subscribe(resotp => {\n      if (resotp.success) {\n        const user = {\n          email: this.field_username,\n          password: this.field_password\n        };\n        this.userService.authenticateUser(user).subscribe(res => {\n          if (res.success) {\n            this.userService.storeUserData(res.token, res.user);\n            this._commonService.showMessage('success', 'Your Successfully Logged In');\n            this._commonService.redirectTo('/admin');\n          } else {\n            this._commonService.showMessage('error', res.msg);\n          }\n        });\n      } else {\n        this._commonService.showMessage('error', resotp.msg);\n      }\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MDBBootstrapModulesPro } from '../../../../ng-uikit-pro-standard';\nimport { LoginComponent } from './login.component';\nimport { FormsModule } from '../../../../node_modules/@angular/forms';\n\nconst router: Routes = [\n  { path : '', component : LoginComponent  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MDBBootstrapModulesPro.forRoot(),\n    RouterModule.forChild(router),\n    FormsModule\n  ],\n  declarations: [LoginComponent]\n})\nexport class LoginModule { }\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidationsService {\n\n  constructor() { }\n\n  isEmpty(input: any) {\n    if (input === undefined ||\n      input === null ||\n      (typeof input === 'object' && Object.keys(input).length === 0) ||\n      (typeof input === 'string' && input.trim().length === 0)) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  isEmail(email: any) {\n    // tslint:disable-next-line:max-line-length\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  }\n\n  isMobile(mobile: any) {\n    const mob = /[0-9]+/;/[^0-9]/g\n    if (!mob.test(mobile)) {\n      return 'Mobile field shoud have only number';\n    } else if (mobile.length !== 10) {\n      return 'Mobile field should contain only 10 numbers';\n    } else {\n      return true;\n    }\n  }\n\n  isDigit(digit: any) {\n    const dig = /[^0-9]/g;\n    if (!dig.test(digit)) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  isPassword(digit: any) {\n    // const dig = /[^0-9]/g;\n    const regpassword = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/g;\n    if (!regpassword.test(digit)) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  isMinimum(mobile: any) {\n    if (mobile.length >= 10) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  isMaximum(mobile: any) {\n    if (mobile.length <= 13) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  isNumber(input: any) {\n    if (typeof Number(input) === 'number') {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  isPercentage(input: any) {\n    if (typeof Number(input) === 'number') {\n      if (input <= 100) {\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  }\n\n}\n"],"sourceRoot":""}